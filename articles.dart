import 'package:flutter/material.dart';
import 'api_service.dart';
import 'model.dart';
import 'details.dart'; 
class ArticlesScreen extends StatefulWidget {
  const ArticlesScreen({super.key});

  @override
  _ArticlesScreenState createState() => _ArticlesScreenState();
}

class _ArticlesScreenState extends State<ArticlesScreen> {
  final ApiService apiService = ApiService();
  Future<Autogenerated?>? articlesFuture;

  @override
  void initState() {
    super.initState();
    articlesFuture = apiService.getAllArticles(); // Fetch articles on screen load
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Colors.greenAccent,
        title: const Text("Hot Articles"),
        actions: const [
          Icon(Icons.badge),
        ],
      ),
      body: FutureBuilder<Autogenerated?>(
        future: articlesFuture,
        builder: (context, snapshot) {
          if (snapshot.connectionState == ConnectionState.waiting) {
            return const Center(
              child: CircularProgressIndicator(),
            ); // Show loading indicator while fetching dat
          } else if (snapshot.hasError) {
            return const Center(child: Text('Error fetching articles'));
          } else if (!snapshot.hasData || snapshot.data?.articles == null || snapshot.data!.articles!.isEmpty) {
            return const Center(child: Text('No articles found'));
          } else {
            final articles = snapshot.data!.articles!;

            return Container(
              color: Colors.lightGreen,
              child: ListView.builder(
                itemCount: articles.length,
                padding: const EdgeInsets.all(8.0),
                itemBuilder: (context, index) {
                  return GestureDetector(
                    onTap: () {
                      // Navigate to the detail screen when tapped
                      Navigator.push(
                        context,
                        MaterialPageRoute(
                          builder: (context) => ArticleDetailScreen(article: articles[index]),
                        ),
                      );
                    },
                    child: Card(
                      color: Colors.lightGreen,
                      margin: const EdgeInsets.symmetric(vertical: 10.0),
                      child: Padding(
                        padding: const EdgeInsets.all(10.0),
                        child: Row(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            // Display image with proper handling if the image URL is null
                            ClipRRect(
                              borderRadius: BorderRadius.circular(10.0),
                              child: Image.network(
                                articles[index].urlToImage ?? "https://www.shutterstock.com/image-photo/white-sneaker-sport-shoe-on-260nw-2155395817.jpg", // Default image if null
                                height: 200,
                                width: 100,
                                fit: BoxFit.cover,
                                errorBuilder: (context, error, stackTrace) {
                                  return const Icon(
                                    Icons.image_not_supported,
                                    size: 50,
                                    color: Colors.grey,
                                  );
                                },
                              ),
                            ),
                            const SizedBox(width: 10),
                            Expanded(
                              child: Column(
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: [
                                  Text(
                                    articles[index].title ?? "Title not available",
                                    style: const TextStyle(
                                      fontWeight: FontWeight.bold,
                                      color: Colors.red,
                                      fontSize: 16,
                                    ),
                                  ),
                                  const SizedBox(height: 8),
                                  Text(
                                    articles[index].description ?? "Description not available",
                                    style: const TextStyle(fontSize: 14),
                                  ),
                                ],
                              ),
                            ),
                          ],
                        ),
                      ),
                    ),
                  );
                },
              ),
            );
          }
        },
      ),
    );
  }
}
